{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/CommentFormComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/comments.js","redux/dishes.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleCommentSubmit","this","setState","values","addComment","dishId","rating","yourname","comment","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","md","Col","size","offset","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","listItems","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetails","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","console","log","JSON","stringify","addFeedBack","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","minLen","maxLen","checkbox","RenderLeader","leaderslist","class","About","CardHeader","title","Media","list","leaders","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","store","dispatch","newComment","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","postComment","actions","reset","newFeedback","postfeedback","Comments","action","concat","Dishes","Leaders","Promotions","InitialFeedback","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ba85ebb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n    \r\n\r\n    const Menu = (props) => {\r\n\r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\"  key={dish.id}>\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n\r\nexport default Menu;","import React,{Component} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, Row, Label, Col } from 'reactstrap';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => {\r\n   return( val && val.length );\r\n}\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleCommentSubmit =  this.handleCommentSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleCommentSubmit(values) {\r\n        this.toggleModal();\r\n        \r\n        this.props.addComment(this.props.dishId,values.rating,values.yourname,values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <Button outline onClick={this.toggleModal} ><span className=\"fa fa-pencil-square-o\"></span>Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleCommentSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 0}}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"yourname\" md={10}>Your Name</Label>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 0}}>\r\n                                    <Control.text model=\".yourname\" name=\"yourname\" id=\"yourname\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Your Name\"\r\n                                        validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}>\r\n                                    </Control.text>\r\n                                    <Errors className=\"text-danger\"\r\n                                                model=\".yourname\"\r\n                                                show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be greater than 2 numbers',\r\n                                                    maxLength: 'Must be 15 numbers or less',\r\n                                                }}\r\n                                        >\r\n                                        </Errors>\r\n\r\n                                </Col>\r\n                                                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 0}}>\r\n                                    <Control.textarea model=\".comment\" name=\"comment\" id=\"comment\"\r\n                                        className=\"form-control\"\r\n                                        rows=\"12\"    \r\n                                   />    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 0}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CommentForm;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentFormComponent';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\n\r\n    function RenderDish({dish}){\r\n            \r\n       if(dish != null) {\r\n            return(\r\n                     <div className=\"col-12 col-md-12 m-1\">\r\n                           <FadeTransform\r\n                                    in\r\n                                    transformProps={{\r\n                                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                                    }}>\r\n                                <Card>\r\n                                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                                    <CardBody>\r\n                                        <CardTitle>{dish.name}</CardTitle>\r\n                                        <CardText>{dish.description}</CardText>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </FadeTransform>\r\n                        </div>\r\n                    \r\n                \r\n                \r\n            );\r\n        }else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n    function RenderComments({comments,addComment,dishId}){\r\n       \r\n        if(comments!=null){\r\n            const listItems = comments.map((comment) =>\r\n            <Fade in>\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                </li>\r\n            </Fade>\r\n                 \r\n            );\r\n        return (\r\n           \r\n                <div className=\"col-12 col-md-12 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <Stagger in>\r\n                        <ul>{listItems}</ul>\r\n                    </Stagger>\r\n                    <CommentForm addComment={addComment} dishId={dishId}/>\r\n                </div>\r\n           \r\n        );\r\n           \r\n        }else{\r\n            return(<div></div>)\r\n        }\r\n    }\r\n   const DishDetails = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null){\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n    \r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderComments comments={props.comments} addComment={props.addComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\nexport default DishDetails;","import React from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n      \r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      \r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n      toggleNav() {\r\n        \r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink   to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink  to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink   to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink  to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                    </Nav>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({item,isLoading, errMess}) {\r\n\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);        \r\n    }\r\n\r\n    \r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.addFeedBack(values.firstname, values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\r\n        // event.preventDefault();\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render(){\r\n        \r\n       \r\n        return(\r\n            <div className=\"container\">\r\n                 <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype:nishflex\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form  model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLen: minLength(3), maxLen: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLen: 'Must be greater than 2 characters',\r\n                                            maxLen: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Stagger } from 'react-animation-components';\n\nfunction About(props) {\n\n    \n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                   <Media list>\n                        <RenderLeader leaderslist={props.leaders}/>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction RenderLeader({leaderslist}){\n    const leaders = leaderslist.map((leader) => {\n        return (\n            <Stagger\n             in >\n                <div class=\"media mt-5\">\n                    <img class=\"mr-3\" src={baseUrl +leader.image} alt=\"Generic placeholder\"/>\n                    <div class=\"media-body\">\n                    <h5 class=\"mt-0\">{leader.name}</h5>\n                    <h6 class=\"mt-0\">{leader.designation}</h6>\n                        {leader.description}\n                    </div>\n                </div>\n            </Stagger>\n        );\n    });\n    return leaders;\n}\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\n\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const postfeedback = (firstname, lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => {alert('New feedback: '+JSON.stringify(response));})\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const addFeedBack = (feedback) =>{\r\n    alert(\"New Feedback::\"+JSON.stringify(feedback))\r\n}\r\nexport const fetchDishes = () => (dispatch) =>  {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response =>{\r\n        if(response.ok){\r\n           return response; \r\n        }else{\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response=>{\r\n            if(response.ok){\r\n                return response;\r\n            }else{\r\n                var error = new Error(\"Error : \"+response.status+\" \"+response.statusText);\r\n                throw error;\r\n            }\r\n    },\r\n    error=>{\r\n        var errMess = new Error(\"Error : \"+error.status+\" \"+error.message);\r\n        throw errMess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\nexport const fetchLeaders = () => (dispatch) =>  {\r\n    dispatch(leadersLoading(true));\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response =>{\r\n        if(response.ok){\r\n           return response; \r\n        }else{\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\n\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent.js'\r\nimport { Switch, Route, Redirect , withRouter } from 'react-router-dom'\r\nimport {connect} from 'react-redux';\r\nimport { postComment ,fetchDishes , fetchComments,fetchPromos,fetchLeaders, postfeedback} from '../redux/ActionCreators';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nimport { actions } from 'react-redux-form';\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => dispatch(fetchDishes()),\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  addFeedBack: (firstname, lastname,telnum,email,agree,contactType,message) => dispatch(postfeedback(firstname, lastname,telnum,email,agree,contactType,message))\r\n});\r\n\r\n\r\n\r\n\r\nconst mapToStateToProps = store =>{\r\n    return{\r\n      dishes: store.dishes,\r\n      comments: store.comments,\r\n      promotions: store.promotions,\r\n      leaders: store.leaders,\r\n      selectedDish: null\r\n    }\r\n      \r\n  \r\n};\r\n\r\nclass Main extends Component {\r\n\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  \r\n  }\r\n     \r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId});\r\n  }\r\n\r\n  render() {\r\n    \r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n      />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          addComment={this.props.addComment}\r\n        />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Navbar dark color=\"primary\">\r\n          <div className=\"container\">\r\n            <NavbarBrand href=\"/\">Ristorante Con Fusion</NavbarBrand>\r\n          </div>\r\n        </Navbar>\r\n        <Header/>\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} />} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} addFeedBack={this.props.addFeedBack} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default withRouter((connect(mapToStateToProps,mapDispatchToProps)(Main)));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        \r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","\r\nimport * as ActionTypes from './ActionTypes'\r\n\r\n\r\n\r\nexport const Dishes = (state = \r\n        {\r\n            isLoading:true,\r\n            errMess:null,\r\n            dishes:[]\r\n        },action) =>{\r\n            switch(action.type){\r\n                case ActionTypes.ADD_DISHES:\r\n                    return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n                case ActionTypes.DISHES_LOADING:\r\n                    return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n                case ActionTypes.DISHES_FAILED:\r\n                    return {...state, isLoading: false, errMess: action.payload};\r\n                default:\r\n                    return state;\r\n    }\r\n    \r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Leaders = (state = { errMess: null, leaders:[]}, action) => { \r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n    \r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore'\n\nconst store = ConfigureStore();\nclass App extends Component {\n \n  render() {\n    return (\n      <Provider store={store}>\n          <BrowserRouter>\n            <div className=\"App\">\n              <Main />\n            </div>\n        </BrowserRouter>\n      </Provider>\n      \n    );\n  }\n\n  \n}\n\nexport default App;\n","import {createStore, combineReducers,applyMiddleware } from 'redux';\r\nimport {Comments} from './comments';\r\nimport {Dishes} from './dishes';\r\nimport {Leaders} from './leaders';\r\nimport {Promotions} from './promotions';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () =>{\r\n    const store =  createStore(\r\n        combineReducers({\r\n                dishes:Dishes,\r\n                comments:Comments,\r\n                leaders:Leaders,\r\n                promotions:Promotions,\r\n                ...createForms({\r\n                    feedback: InitialFeedback\r\n                })\r\n            }\r\n           \r\n        ),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}